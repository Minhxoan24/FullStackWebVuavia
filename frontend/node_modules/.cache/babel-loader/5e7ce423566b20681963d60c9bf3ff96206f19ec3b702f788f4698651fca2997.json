{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Minh\\\\Desktop\\\\DaVuavia\\\\FullStackWebVuavia\\\\frontend\\\\src\\\\Components\\\\ConnectionStatus\\\\SimpleConnectionStatus.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Alert } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SimpleConnectionStatus = () => {\n  _s();\n  const [status, setStatus] = useState('checking');\n  const [error, setError] = useState(null);\n  const [baseUrl, setBaseUrl] = useState('');\n  useEffect(() => {\n    // T√≠nh to√°n base URL ngay trong component\n    const getBaseURL = () => {\n      if (process.env.REACT_APP_API_URL && process.env.REACT_APP_API_URL !== 'auto') {\n        return process.env.REACT_APP_API_URL;\n      }\n      if (typeof window !== 'undefined') {\n        const currentHost = window.location.hostname;\n        if (currentHost === 'localhost' || currentHost === '127.0.0.1') {\n          return 'http://localhost:8000';\n        }\n      }\n      return 'http://192.168.1.67:8000';\n    };\n    const url = getBaseURL();\n    setBaseUrl(url);\n    const checkConnection = async () => {\n      try {\n        const response = await fetch(`${url}/docs`, {\n          method: 'HEAD',\n          mode: 'cors'\n        });\n        if (response.ok) {\n          setStatus('connected');\n          setError(null);\n        } else {\n          setStatus('error');\n          setError(`Server response: ${response.status}`);\n        }\n      } catch (err) {\n        setStatus('error');\n        setError(`Connection failed: ${err.message}`);\n      }\n    };\n    checkConnection();\n    const interval = setInterval(checkConnection, 30000);\n    return () => clearInterval(interval);\n  }, []);\n  if (process.env.NODE_ENV !== 'development') {\n    return null;\n  }\n  const getAlertVariant = () => {\n    switch (status) {\n      case 'connected':\n        return 'success';\n      case 'error':\n        return 'danger';\n      default:\n        return 'info';\n    }\n  };\n  const getMessage = () => {\n    switch (status) {\n      case 'connected':\n        return `‚úÖ K·∫øt n·ªëi API th√†nh c√¥ng: ${baseUrl}`;\n      case 'error':\n        return `‚ùå L·ªói k·∫øt n·ªëi API: ${error}`;\n      default:\n        return `üîÑ ƒêang ki·ªÉm tra k·∫øt n·ªëi API...`;\n    }\n  };\n  const currentUrl = typeof window !== 'undefined' ? window.location.href : 'Unknown';\n  const hostname = typeof window !== 'undefined' ? window.location.hostname : 'Unknown';\n  return /*#__PURE__*/_jsxDEV(Alert, {\n    variant: getAlertVariant(),\n    className: \"mb-2\",\n    style: {\n      fontSize: '0.8rem'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n      children: \"Debug Info:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), \" \", getMessage(), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n      children: [\"Current URL: \", currentUrl, \" | API Base: \", baseUrl, \" | Hostname: \", hostname]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n_s(SimpleConnectionStatus, \"qXduLHvnoShb4c8tXHAtbw2cw68=\");\n_c = SimpleConnectionStatus;\nexport default SimpleConnectionStatus;\nvar _c;\n$RefreshReg$(_c, \"SimpleConnectionStatus\");","map":{"version":3,"names":["React","useState","useEffect","Alert","jsxDEV","_jsxDEV","SimpleConnectionStatus","_s","status","setStatus","error","setError","baseUrl","setBaseUrl","getBaseURL","process","env","REACT_APP_API_URL","window","currentHost","location","hostname","url","checkConnection","response","fetch","method","mode","ok","err","message","interval","setInterval","clearInterval","NODE_ENV","getAlertVariant","getMessage","currentUrl","href","variant","className","style","fontSize","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Minh/Desktop/DaVuavia/FullStackWebVuavia/frontend/src/Components/ConnectionStatus/SimpleConnectionStatus.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Alert } from 'react-bootstrap';\r\n\r\nconst SimpleConnectionStatus = () => {\r\n  const [status, setStatus] = useState('checking');\r\n  const [error, setError] = useState(null);\r\n  const [baseUrl, setBaseUrl] = useState('');\r\n\r\n  useEffect(() => {\r\n    // T√≠nh to√°n base URL ngay trong component\r\n    const getBaseURL = () => {\r\n      if (process.env.REACT_APP_API_URL && process.env.REACT_APP_API_URL !== 'auto') {\r\n        return process.env.REACT_APP_API_URL;\r\n      }\r\n      \r\n      if (typeof window !== 'undefined') {\r\n        const currentHost = window.location.hostname;\r\n        if (currentHost === 'localhost' || currentHost === '127.0.0.1') {\r\n          return 'http://localhost:8000';\r\n        }\r\n      }\r\n      \r\n      return 'http://192.168.1.67:8000';\r\n    };\r\n\r\n    const url = getBaseURL();\r\n    setBaseUrl(url);\r\n\r\n    const checkConnection = async () => {\r\n      try {\r\n        const response = await fetch(`${url}/docs`, {\r\n          method: 'HEAD',\r\n          mode: 'cors'\r\n        });\r\n        \r\n        if (response.ok) {\r\n          setStatus('connected');\r\n          setError(null);\r\n        } else {\r\n          setStatus('error');\r\n          setError(`Server response: ${response.status}`);\r\n        }\r\n      } catch (err) {\r\n        setStatus('error');\r\n        setError(`Connection failed: ${err.message}`);\r\n      }\r\n    };\r\n\r\n    checkConnection();\r\n    \r\n    const interval = setInterval(checkConnection, 30000);\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  if (process.env.NODE_ENV !== 'development') {\r\n    return null;\r\n  }\r\n\r\n  const getAlertVariant = () => {\r\n    switch (status) {\r\n      case 'connected': return 'success';\r\n      case 'error': return 'danger';\r\n      default: return 'info';\r\n    }\r\n  };\r\n\r\n  const getMessage = () => {\r\n    switch (status) {\r\n      case 'connected': return `‚úÖ K·∫øt n·ªëi API th√†nh c√¥ng: ${baseUrl}`;\r\n      case 'error': return `‚ùå L·ªói k·∫øt n·ªëi API: ${error}`;\r\n      default: return `üîÑ ƒêang ki·ªÉm tra k·∫øt n·ªëi API...`;\r\n    }\r\n  };\r\n\r\n  const currentUrl = typeof window !== 'undefined' ? window.location.href : 'Unknown';\r\n  const hostname = typeof window !== 'undefined' ? window.location.hostname : 'Unknown';\r\n\r\n  return (\r\n    <Alert variant={getAlertVariant()} className=\"mb-2\" style={{ fontSize: '0.8rem' }}>\r\n      <strong>Debug Info:</strong> {getMessage()}\r\n      <br />\r\n      <small>\r\n        Current URL: {currentUrl} | \r\n        API Base: {baseUrl} |\r\n        Hostname: {hostname}\r\n      </small>\r\n    </Alert>\r\n  );\r\n};\r\n\r\nexport default SimpleConnectionStatus;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}