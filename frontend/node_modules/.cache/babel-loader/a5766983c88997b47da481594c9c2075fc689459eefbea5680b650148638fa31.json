{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Minh\\\\Desktop\\\\DaVuavia\\\\FullStackWebVuavia\\\\frontend\\\\src\\\\Components\\\\ConnectionStatus\\\\ConnectionStatus.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Alert } from 'react-bootstrap';\nimport { BASE_URL } from '../../Services/BaseURL';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ConnectionStatus = () => {\n  _s();\n  const [status, setStatus] = useState('checking');\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const checkConnection = async () => {\n      try {\n        const response = await fetch(`${BASE_URL}/docs`, {\n          method: 'HEAD',\n          mode: 'cors'\n        });\n        if (response.ok) {\n          setStatus('connected');\n          setError(null);\n        } else {\n          setStatus('error');\n          setError(`Server response: ${response.status}`);\n        }\n      } catch (err) {\n        setStatus('error');\n        setError(`Connection failed: ${err.message}`);\n      }\n    };\n    checkConnection();\n\n    // Check every 30 seconds\n    const interval = setInterval(checkConnection, 30000);\n    return () => clearInterval(interval);\n  }, []);\n\n  // Ch·ªâ hi·ªÉn th·ªã trong development mode\n  if (process.env.NODE_ENV !== 'development') {\n    return null;\n  }\n  const getAlertVariant = () => {\n    switch (status) {\n      case 'connected':\n        return 'success';\n      case 'error':\n        return 'danger';\n      default:\n        return 'info';\n    }\n  };\n  const getMessage = () => {\n    switch (status) {\n      case 'connected':\n        return `‚úÖ K·∫øt n·ªëi API th√†nh c√¥ng: ${BASE_URL}`;\n      case 'error':\n        return `‚ùå L·ªói k·∫øt n·ªëi API: ${error}`;\n      default:\n        return `üîÑ ƒêang ki·ªÉm tra k·∫øt n·ªëi API...`;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Alert, {\n    variant: getAlertVariant(),\n    className: \"mb-2\",\n    style: {\n      fontSize: '0.8rem'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n      children: \"Debug Info:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), \" \", getMessage(), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n      children: [\"Current URL: \", window.location.href, \" | API Base: \", BASE_URL, \" | Hostname: \", window.location.hostname]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n_s(ConnectionStatus, \"oQRDiPj5sJMVO2GeHeQxVS5C/rI=\");\n_c = ConnectionStatus;\nexport default ConnectionStatus;\nvar _c;\n$RefreshReg$(_c, \"ConnectionStatus\");","map":{"version":3,"names":["React","useState","useEffect","Alert","BASE_URL","jsxDEV","_jsxDEV","ConnectionStatus","_s","status","setStatus","error","setError","checkConnection","response","fetch","method","mode","ok","err","message","interval","setInterval","clearInterval","process","env","NODE_ENV","getAlertVariant","getMessage","variant","className","style","fontSize","children","fileName","_jsxFileName","lineNumber","columnNumber","window","location","href","hostname","_c","$RefreshReg$"],"sources":["C:/Users/Minh/Desktop/DaVuavia/FullStackWebVuavia/frontend/src/Components/ConnectionStatus/ConnectionStatus.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Alert } from 'react-bootstrap';\r\nimport { BASE_URL } from '../../Services/BaseURL';\r\n\r\nconst ConnectionStatus = () => {\r\n  const [status, setStatus] = useState('checking');\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const checkConnection = async () => {\r\n      try {\r\n        const response = await fetch(`${BASE_URL}/docs`, {\r\n          method: 'HEAD',\r\n          mode: 'cors'\r\n        });\r\n        \r\n        if (response.ok) {\r\n          setStatus('connected');\r\n          setError(null);\r\n        } else {\r\n          setStatus('error');\r\n          setError(`Server response: ${response.status}`);\r\n        }\r\n      } catch (err) {\r\n        setStatus('error');\r\n        setError(`Connection failed: ${err.message}`);\r\n      }\r\n    };\r\n\r\n    checkConnection();\r\n    \r\n    // Check every 30 seconds\r\n    const interval = setInterval(checkConnection, 30000);\r\n    \r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  // Ch·ªâ hi·ªÉn th·ªã trong development mode\r\n  if (process.env.NODE_ENV !== 'development') {\r\n    return null;\r\n  }\r\n\r\n  const getAlertVariant = () => {\r\n    switch (status) {\r\n      case 'connected': return 'success';\r\n      case 'error': return 'danger';\r\n      default: return 'info';\r\n    }\r\n  };\r\n\r\n  const getMessage = () => {\r\n    switch (status) {\r\n      case 'connected': return `‚úÖ K·∫øt n·ªëi API th√†nh c√¥ng: ${BASE_URL}`;\r\n      case 'error': return `‚ùå L·ªói k·∫øt n·ªëi API: ${error}`;\r\n      default: return `üîÑ ƒêang ki·ªÉm tra k·∫øt n·ªëi API...`;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Alert variant={getAlertVariant()} className=\"mb-2\" style={{ fontSize: '0.8rem' }}>\r\n      <strong>Debug Info:</strong> {getMessage()}\r\n      <br />\r\n      <small>\r\n        Current URL: {window.location.href} | \r\n        API Base: {BASE_URL} |\r\n        Hostname: {window.location.hostname}\r\n      </small>\r\n    </Alert>\r\n  );\r\n};\r\n\r\nexport default ConnectionStatus;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}