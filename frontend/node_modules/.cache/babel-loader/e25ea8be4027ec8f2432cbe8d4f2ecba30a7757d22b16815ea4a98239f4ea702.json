{"ast":null,"code":"import apiClient from \"./ApiService\";\nconst getAllProductswithcategory = async () => {\n  try {\n    const res = await apiClient.get(\"/type-product/list-with-products\");\n    return res.data;\n  } catch (error) {\n    console.error(\"Error fetching products with category:\", error);\n    throw error;\n  }\n};\nconst getAllTypeProducts = async () => {\n  try {\n    const res = await apiClient.get(\"/type-product/list\");\n    return res.data;\n  } catch (error) {\n    console.error(\"Error fetching all type products:\", error);\n    throw error;\n  }\n};\nconst getAllTypeProductByIdCategory = async id => {\n  try {\n    const res = await apiClient.get(`/type-product/list-by-category/${id}`);\n    return res.data;\n  } catch (error) {\n    console.error(\"Error fetching type products by category ID:\", error);\n    throw error;\n  }\n};\nconst getTypeProductById = async id => {\n  try {\n    const res = await apiClient.get(`/type-product/Detail/${id}`);\n    return res.data;\n  } catch (error) {\n    console.error(\"Error fetching type product by ID:\", error);\n    throw error;\n  }\n};\nconst postTypeProduct = async productData => {\n  try {\n    const res = await apiClient.post(\"/type-product/create\", productData);\n    return res.data;\n  } catch (error) {\n    console.error(\"Error creating type product:\", error);\n    throw error;\n  }\n};\nconst putTypeProduct = async (id, productData) => {\n  try {\n    const res = await apiClient.put(`/type-product/update/${id}`, productData);\n    return res.data;\n  } catch (error) {\n    console.error(\"Error updating type product:\", error);\n    throw error;\n  }\n};\nconst deleteTypeProduct = async id => {\n  try {\n    const res = await apiClient.delete(`/type-product/delete/${id}`);\n    return res.data;\n  } catch (error) {\n    console.error(\"Error deleting type product:\", error);\n    throw error;\n  }\n};\nexport { getAllProductswithcategory, getTypeProductById, postTypeProduct, putTypeProduct, deleteTypeProduct, getAllTypeProducts, getAllTypeProductByIdCategory };","map":{"version":3,"names":["apiClient","getAllProductswithcategory","res","get","data","error","console","getAllTypeProducts","getAllTypeProductByIdCategory","id","getTypeProductById","postTypeProduct","productData","post","putTypeProduct","put","deleteTypeProduct","delete"],"sources":["C:/Users/Minh/Desktop/FullStackWebVuavia/frontend/src/Services/ApiTypeProduct.jsx"],"sourcesContent":["import apiClient from \"./ApiService\";\r\nconst getAllProductswithcategory = async () => {\r\n    try {\r\n        const res = await apiClient.get(\"/type-product/list-with-products\");\r\n        return res.data;\r\n    } catch (error) {\r\n        console.error(\"Error fetching products with category:\", error);\r\n        throw error;\r\n    }\r\n}\r\nconst getAllTypeProducts = async () => {\r\n    try {\r\n        const res = await apiClient.get(\"/type-product/list\");\r\n        return res.data;\r\n    } catch (error) {\r\n        console.error(\"Error fetching all type products:\", error);\r\n        throw error;\r\n    }\r\n}\r\nconst getAllTypeProductByIdCategory = async (id) => {\r\n    try {\r\n        const res = await apiClient.get(`/type-product/list-by-category/${id}`);\r\n        return res.data;\r\n    }\r\n    catch (error) {\r\n        console.error(\"Error fetching type products by category ID:\", error);\r\n        throw error;\r\n    }\r\n}\r\nconst getTypeProductById = async (id) => {\r\n    try {\r\n        const res = await apiClient.get(`/type-product/Detail/${id}`);\r\n        return res.data;\r\n    } catch (error) {\r\n        console.error(\"Error fetching type product by ID:\", error);\r\n        throw error;\r\n    }\r\n}\r\nconst postTypeProduct = async (productData) => {\r\n    try {\r\n        const res = await apiClient.post(\"/type-product/create\", productData);\r\n        return res.data;\r\n    } catch (error) {\r\n        console.error(\"Error creating type product:\", error);\r\n        throw error;\r\n    }\r\n}\r\nconst putTypeProduct = async (id, productData) => {\r\n    try {\r\n        const res = await apiClient.put(`/type-product/update/${id}`, productData);\r\n        return res.data;\r\n    } catch (error) {\r\n        console.error(\"Error updating type product:\", error);\r\n        throw error;\r\n    }\r\n}\r\nconst deleteTypeProduct = async (id) => {\r\n    try {\r\n        const res = await apiClient.delete(`/type-product/delete/${id}`);\r\n        return res.data;\r\n    } catch (error) {\r\n        console.error(\"Error deleting type product:\", error);\r\n        throw error;\r\n    }\r\n}\r\n\r\nexport { getAllProductswithcategory, getTypeProductById, postTypeProduct, putTypeProduct, deleteTypeProduct, getAllTypeProducts, getAllTypeProductByIdCategory      };\r\n"],"mappings":"AAAA,OAAOA,SAAS,MAAM,cAAc;AACpC,MAAMC,0BAA0B,GAAG,MAAAA,CAAA,KAAY;EAC3C,IAAI;IACA,MAAMC,GAAG,GAAG,MAAMF,SAAS,CAACG,GAAG,CAAC,kCAAkC,CAAC;IACnE,OAAOD,GAAG,CAACE,IAAI;EACnB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,wCAAwC,EAAEA,KAAK,CAAC;IAC9D,MAAMA,KAAK;EACf;AACJ,CAAC;AACD,MAAME,kBAAkB,GAAG,MAAAA,CAAA,KAAY;EACnC,IAAI;IACA,MAAML,GAAG,GAAG,MAAMF,SAAS,CAACG,GAAG,CAAC,oBAAoB,CAAC;IACrD,OAAOD,GAAG,CAACE,IAAI;EACnB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAAC;IACzD,MAAMA,KAAK;EACf;AACJ,CAAC;AACD,MAAMG,6BAA6B,GAAG,MAAOC,EAAE,IAAK;EAChD,IAAI;IACA,MAAMP,GAAG,GAAG,MAAMF,SAAS,CAACG,GAAG,CAAC,kCAAkCM,EAAE,EAAE,CAAC;IACvE,OAAOP,GAAG,CAACE,IAAI;EACnB,CAAC,CACD,OAAOC,KAAK,EAAE;IACVC,OAAO,CAACD,KAAK,CAAC,8CAA8C,EAAEA,KAAK,CAAC;IACpE,MAAMA,KAAK;EACf;AACJ,CAAC;AACD,MAAMK,kBAAkB,GAAG,MAAOD,EAAE,IAAK;EACrC,IAAI;IACA,MAAMP,GAAG,GAAG,MAAMF,SAAS,CAACG,GAAG,CAAC,wBAAwBM,EAAE,EAAE,CAAC;IAC7D,OAAOP,GAAG,CAACE,IAAI;EACnB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,oCAAoC,EAAEA,KAAK,CAAC;IAC1D,MAAMA,KAAK;EACf;AACJ,CAAC;AACD,MAAMM,eAAe,GAAG,MAAOC,WAAW,IAAK;EAC3C,IAAI;IACA,MAAMV,GAAG,GAAG,MAAMF,SAAS,CAACa,IAAI,CAAC,sBAAsB,EAAED,WAAW,CAAC;IACrE,OAAOV,GAAG,CAACE,IAAI;EACnB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;IACpD,MAAMA,KAAK;EACf;AACJ,CAAC;AACD,MAAMS,cAAc,GAAG,MAAAA,CAAOL,EAAE,EAAEG,WAAW,KAAK;EAC9C,IAAI;IACA,MAAMV,GAAG,GAAG,MAAMF,SAAS,CAACe,GAAG,CAAC,wBAAwBN,EAAE,EAAE,EAAEG,WAAW,CAAC;IAC1E,OAAOV,GAAG,CAACE,IAAI;EACnB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;IACpD,MAAMA,KAAK;EACf;AACJ,CAAC;AACD,MAAMW,iBAAiB,GAAG,MAAOP,EAAE,IAAK;EACpC,IAAI;IACA,MAAMP,GAAG,GAAG,MAAMF,SAAS,CAACiB,MAAM,CAAC,wBAAwBR,EAAE,EAAE,CAAC;IAChE,OAAOP,GAAG,CAACE,IAAI;EACnB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;IACpD,MAAMA,KAAK;EACf;AACJ,CAAC;AAED,SAASJ,0BAA0B,EAAES,kBAAkB,EAAEC,eAAe,EAAEG,cAAc,EAAEE,iBAAiB,EAAET,kBAAkB,EAAEC,6BAA6B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}