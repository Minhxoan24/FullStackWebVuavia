{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Minh\\\\Desktop\\\\FullStackWebVuavia\\\\frontend\\\\src\\\\Services\\\\AuthService.jsx\",\n  _s = $RefreshSig$();\nimport apiClient from \"./ApiService\";\nimport { createContext, useContext, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [token, setToken] = useState(localStorage.getItem(\"access_token\"));\n  const [user, setUser] = useState(null);\n  const login = async ({\n    accountname,\n    password\n  }, remember = false) => {\n    const data = await AuthService.login({\n      accountname,\n      password\n    });\n    localStorage.setItem(\"access_token\", data.access_token);\n    localStorage.setItem(\"refresh_token\", data.refresh_token);\n    apiClient.defaults.headers.common.Authorization = `Bearer ${data.access_token}`;\n    setToken(data.access_token);\n  };\n  const register = async userInfo => {\n    const data = await AuthService.register(userInfo);\n    localStorage.setItem(\"access_token\", data.access_token);\n    localStorage.setItem(\"refresh_token\", data.refresh_token);\n    apiClient.defaults.headers.common.Authorization = `Bearer ${data.access_token}`;\n    setToken(data.access_token);\n  };\n  const logout = async () => {\n    try {\n      await apiClient.post(\"/Account/logout\");\n    } catch (e) {\n      // ignore if endpoint not present\n    }\n    localStorage.removeItem(\"access_token\");\n    localStorage.removeItem(\"refresh_token\");\n    delete apiClient.defaults.headers.common[\"Authorization\"];\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      token,\n      login,\n      logout,\n      register\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"q3icbMmyGA6sDOIVLBwI7ftNg1U=\");\n_c = AuthProvider;\nexport default AuthContext;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["apiClient","createContext","useContext","useState","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","token","setToken","localStorage","getItem","user","setUser","login","accountname","password","remember","data","AuthService","setItem","access_token","refresh_token","defaults","headers","common","Authorization","register","userInfo","logout","post","e","removeItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Minh/Desktop/FullStackWebVuavia/frontend/src/Services/AuthService.jsx"],"sourcesContent":["import apiClient from \"./ApiService\";\r\nimport { createContext, useContext, useState } from \"react\";\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [token, setToken] = useState(localStorage.getItem(\"access_token\"));\r\n  const [user, setUser] = useState(null);\r\n\r\n  const login = async ({ accountname, password }, remember = false) => {\r\n    const data = await AuthService.login({ accountname, password });\r\n    localStorage.setItem(\"access_token\", data.access_token);\r\n    localStorage.setItem(\"refresh_token\", data.refresh_token);\r\n    apiClient.defaults.headers.common.Authorization = `Bearer ${data.access_token}`;\r\n    setToken(data.access_token);\r\n  };\r\n\r\n  const register = async (userInfo) => {\r\n    const data = await AuthService.register(userInfo);\r\n    localStorage.setItem(\"access_token\", data.access_token);\r\n    localStorage.setItem(\"refresh_token\", data.refresh_token);\r\n    apiClient.defaults.headers.common.Authorization = `Bearer ${data.access_token}`;\r\n    setToken(data.access_token);\r\n  };\r\n\r\n  const logout = async () => {\r\n    try {\r\n      await apiClient.post(\"/Account/logout\");\r\n    } catch (e) {\r\n      // ignore if endpoint not present\r\n    }\r\n    localStorage.removeItem(\"access_token\");\r\n    localStorage.removeItem(\"refresh_token\");\r\n    delete apiClient.defaults.headers.common[\"Authorization\"];\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ user, token, login, logout, register }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AuthContext;\r\n"],"mappings":";;AAAA,OAAOA,SAAS,MAAM,cAAc;AACpC,SAASC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5D,MAAMC,WAAW,gBAAGL,aAAa,CAAC,CAAC;AAEnC,OAAO,MAAMM,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAACS,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC,CAAC;EACxE,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAEtC,MAAMa,KAAK,GAAG,MAAAA,CAAO;IAAEC,WAAW;IAAEC;EAAS,CAAC,EAAEC,QAAQ,GAAG,KAAK,KAAK;IACnE,MAAMC,IAAI,GAAG,MAAMC,WAAW,CAACL,KAAK,CAAC;MAAEC,WAAW;MAAEC;IAAS,CAAC,CAAC;IAC/DN,YAAY,CAACU,OAAO,CAAC,cAAc,EAAEF,IAAI,CAACG,YAAY,CAAC;IACvDX,YAAY,CAACU,OAAO,CAAC,eAAe,EAAEF,IAAI,CAACI,aAAa,CAAC;IACzDxB,SAAS,CAACyB,QAAQ,CAACC,OAAO,CAACC,MAAM,CAACC,aAAa,GAAG,UAAUR,IAAI,CAACG,YAAY,EAAE;IAC/EZ,QAAQ,CAACS,IAAI,CAACG,YAAY,CAAC;EAC7B,CAAC;EAED,MAAMM,QAAQ,GAAG,MAAOC,QAAQ,IAAK;IACnC,MAAMV,IAAI,GAAG,MAAMC,WAAW,CAACQ,QAAQ,CAACC,QAAQ,CAAC;IACjDlB,YAAY,CAACU,OAAO,CAAC,cAAc,EAAEF,IAAI,CAACG,YAAY,CAAC;IACvDX,YAAY,CAACU,OAAO,CAAC,eAAe,EAAEF,IAAI,CAACI,aAAa,CAAC;IACzDxB,SAAS,CAACyB,QAAQ,CAACC,OAAO,CAACC,MAAM,CAACC,aAAa,GAAG,UAAUR,IAAI,CAACG,YAAY,EAAE;IAC/EZ,QAAQ,CAACS,IAAI,CAACG,YAAY,CAAC;EAC7B,CAAC;EAED,MAAMQ,MAAM,GAAG,MAAAA,CAAA,KAAY;IACzB,IAAI;MACF,MAAM/B,SAAS,CAACgC,IAAI,CAAC,iBAAiB,CAAC;IACzC,CAAC,CAAC,OAAOC,CAAC,EAAE;MACV;IAAA;IAEFrB,YAAY,CAACsB,UAAU,CAAC,cAAc,CAAC;IACvCtB,YAAY,CAACsB,UAAU,CAAC,eAAe,CAAC;IACxC,OAAOlC,SAAS,CAACyB,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAC,eAAe,CAAC;EAC3D,CAAC;EAED,oBACEtB,OAAA,CAACC,WAAW,CAAC6B,QAAQ;IAACC,KAAK,EAAE;MAAEtB,IAAI;MAAEJ,KAAK;MAAEM,KAAK;MAAEe,MAAM;MAAEF;IAAS,CAAE;IAAArB,QAAA,EACnEA;EAAQ;IAAA6B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAAC/B,EAAA,CApCWF,YAAY;AAAAkC,EAAA,GAAZlC,YAAY;AAsCzB,eAAeD,WAAW;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}